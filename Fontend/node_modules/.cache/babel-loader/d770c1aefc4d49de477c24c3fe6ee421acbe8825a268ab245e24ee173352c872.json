{"ast":null,"code":"var _jsxFileName = \"D:\\\\game\\\\Fontend\\\\src\\\\components\\\\game\\\\GameCanvas.jsx\",\n  _s = $RefreshSig$();\n// src/components/game/GameCanvas.jsx\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = 530;\n    canvas.height = 710;\n    const sprites = new Image();\n    sprites.src = '/assets/images/sprite.png';\n    let frame = 0;\n    let game = 'start';\n    const DEGREE = Math.PI / 180;\n\n    // Load sounds (tùy chọn: có thể bỏ nếu không cần)\n    const SCORE_S = new Audio('/assets/audio/sfx_point.wav');\n    const FLAP = new Audio('/assets/audio/sfx_flap.wav');\n    const HIT = new Audio('/assets/audio/sfx_hit.wav');\n    const DIE = new Audio('/assets/audio/sfx_die.wav');\n    const bg = {\n      sX: 0,\n      sY: 0,\n      w: 275,\n      h: 226,\n      x: 0,\n      y: canvas.height - 226,\n      draw() {\n        ctx.drawImage(sprites, this.sX, this.sY, this.w, this.h, this.x, this.y, this.w, this.h);\n        ctx.drawImage(sprites, this.sX, this.sY, this.w, this.h, this.x + this.w, this.y, this.w, this.h);\n      }\n    };\n    const ground = {\n      sX: 276,\n      sY: 0,\n      w: 224,\n      h: 112,\n      x: 0,\n      y: canvas.height - 112,\n      dx: 2,\n      draw() {\n        ctx.drawImage(sprites, this.sX, this.sY, this.w, this.h, this.x, this.y, this.w, this.h);\n        ctx.drawImage(sprites, this.sX, this.sY, this.w, this.h, this.x + this.w, this.y, this.w, this.h);\n      },\n      update() {\n        if (game === 'play') {\n          this.x = (this.x - this.dx) % (this.w / 2);\n        }\n      }\n    };\n    const bird = {\n      animation: [{\n        sX: 276,\n        sY: 112\n      }, {\n        sX: 276,\n        sY: 139\n      }, {\n        sX: 276,\n        sY: 164\n      }, {\n        sX: 276,\n        sY: 139\n      }],\n      x: 50,\n      y: 150,\n      w: 34,\n      h: 26,\n      radius: 12,\n      frame: 0,\n      gravity: 0.25,\n      jump: 4.6,\n      speed: 0,\n      rotation: 0,\n      draw() {\n        const bird = this.animation[this.frame];\n        ctx.save();\n        ctx.translate(this.x, this.y);\n        ctx.rotate(this.rotation);\n        ctx.drawImage(sprites, bird.sX, bird.sY, this.w, this.h, -this.w / 2, -this.h / 2, this.w, this.h);\n        ctx.restore();\n      },\n      flap() {\n        this.speed = -this.jump;\n        FLAP.play();\n      },\n      update() {\n        this.period = game === 'start' ? 10 : 5;\n        this.frame += frame % this.period === 0 ? 1 : 0;\n        this.frame %= this.animation.length;\n        if (game === 'start') {\n          this.y = 150;\n          this.rotation = 0;\n        } else {\n          this.speed += this.gravity;\n          this.y += this.speed;\n          if (this.y + this.h / 2 >= canvas.height - 112) {\n            this.y = canvas.height - 112 - this.h / 2;\n            if (game === 'play') {\n              game = 'end';\n              DIE.play();\n            }\n          }\n          this.rotation = this.speed >= this.jump ? 90 * DEGREE : -25 * DEGREE;\n        }\n      },\n      reset() {\n        this.speed = 0;\n        this.y = 150;\n      }\n    };\n    const pipes = {\n      position: [],\n      top: {\n        sX: 553,\n        sY: 0\n      },\n      bottom: {\n        sX: 502,\n        sY: 0\n      },\n      w: 53,\n      h: 400,\n      gap: 85,\n      maxYPos: -150,\n      dx: 2,\n      draw() {\n        this.position.forEach(pipe => {\n          let topY = pipe.y;\n          let bottomY = pipe.y + this.h + this.gap;\n          ctx.drawImage(sprites, this.top.sX, this.top.sY, this.w, this.h, pipe.x, topY, this.w, this.h);\n          ctx.drawImage(sprites, this.bottom.sX, this.bottom.sY, this.w, this.h, pipe.x, bottomY, this.w, this.h);\n        });\n      },\n      update() {\n        if (game !== 'play') return;\n        if (frame % 100 === 0) {\n          this.position.push({\n            x: canvas.width,\n            y: this.maxYPos * (Math.random() + 1)\n          });\n        }\n        this.position.forEach((pipe, index) => {\n          let bottomY = pipe.y + this.h + this.gap;\n\n          // collision\n          if (bird.x + bird.radius > pipe.x && bird.x - bird.radius < pipe.x + this.w && (bird.y - bird.radius < pipe.y + this.h || bird.y + bird.radius > bottomY)) {\n            HIT.play();\n            game = 'end';\n          }\n          pipe.x -= this.dx;\n          if (pipe.x + this.w <= 0) {\n            this.position.shift();\n            score.value += 1;\n            SCORE_S.play();\n            score.best = Math.max(score.best, score.value);\n            localStorage.setItem('best', score.best);\n          }\n        });\n      },\n      reset() {\n        this.position = [];\n      }\n    };\n    const score = {\n      best: parseInt(localStorage.getItem('best')) || 0,\n      value: 0,\n      draw() {\n        ctx.fillStyle = '#FFF';\n        ctx.strokeStyle = '#000';\n        ctx.lineWidth = 2;\n        ctx.font = '35px Teko';\n        if (game === 'play') {\n          ctx.fillText(score.value, canvas.width / 2, 50);\n          ctx.strokeText(score.value, canvas.width / 2, 50);\n        } else if (game === 'end') {\n          ctx.fillText(`Score: ${this.value}`, canvas.width / 2 - 80, 400);\n          ctx.strokeText(`Score: ${this.value}`, canvas.width / 2 - 80, 400);\n          ctx.fillText(`Best: ${this.best}`, canvas.width / 2 - 80, 440);\n          ctx.strokeText(`Best: ${this.best}`, canvas.width / 2 - 80, 440);\n        }\n      },\n      reset() {\n        this.value = 0;\n      }\n    };\n    const draw = () => {\n      ctx.fillStyle = '#70c5ce';\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\n      bg.draw();\n      pipes.draw();\n      ground.draw();\n      bird.draw();\n      score.draw();\n    };\n    const update = () => {\n      bird.update();\n      ground.update();\n      pipes.update();\n    };\n    const loop = () => {\n      update();\n      draw();\n      frame++;\n      requestAnimationFrame(loop);\n    };\n    const handleClick = () => {\n      switch (game) {\n        case 'start':\n          game = 'play';\n          break;\n        case 'play':\n          bird.flap();\n          break;\n        case 'end':\n          pipes.reset();\n          bird.reset();\n          score.reset();\n          game = 'start';\n          break;\n      }\n    };\n    canvas.addEventListener('click', handleClick);\n    sprites.onload = loop;\n    return () => {\n      canvas.removeEventListener('click', handleClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"canvas\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 10\n  }, this);\n};\n_s(GameCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","canvas","current","ctx","getContext","width","height","sprites","Image","src","frame","game","DEGREE","Math","PI","SCORE_S","Audio","FLAP","HIT","DIE","bg","sX","sY","w","h","x","y","draw","drawImage","ground","dx","update","bird","animation","radius","gravity","jump","speed","rotation","save","translate","rotate","restore","flap","play","period","length","reset","pipes","position","top","bottom","gap","maxYPos","forEach","pipe","topY","bottomY","push","random","index","shift","score","value","best","max","localStorage","setItem","parseInt","getItem","fillStyle","strokeStyle","lineWidth","font","fillText","strokeText","fillRect","loop","requestAnimationFrame","handleClick","addEventListener","onload","removeEventListener","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/game/Fontend/src/components/game/GameCanvas.jsx"],"sourcesContent":["// src/components/game/GameCanvas.jsx\r\nimport React, { useRef, useEffect } from 'react';\r\n\r\nconst GameCanvas = () => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = 530;\r\n    canvas.height = 710;\r\n\r\n    const sprites = new Image();\r\n    sprites.src = '/assets/images/sprite.png';\r\n\r\n    let frame = 0;\r\n    let game = 'start';\r\n\r\n    const DEGREE = Math.PI / 180;\r\n\r\n    // Load sounds (tùy chọn: có thể bỏ nếu không cần)\r\n    const SCORE_S = new Audio('/assets/audio/sfx_point.wav');\r\n    const FLAP = new Audio('/assets/audio/sfx_flap.wav');\r\n    const HIT = new Audio('/assets/audio/sfx_hit.wav');\r\n    const DIE = new Audio('/assets/audio/sfx_die.wav');\r\n\r\n    const bg = {\r\n      sX: 0, sY: 0, w: 275, h: 226, x: 0, y: canvas.height - 226,\r\n      draw() {\r\n        ctx.drawImage(sprites, this.sX, this.sY, this.w, this.h, this.x, this.y, this.w, this.h);\r\n        ctx.drawImage(sprites, this.sX, this.sY, this.w, this.h, this.x + this.w, this.y, this.w, this.h);\r\n      }\r\n    };\r\n\r\n    const ground = {\r\n      sX: 276, sY: 0, w: 224, h: 112, x: 0, y: canvas.height - 112,\r\n      dx: 2,\r\n      draw() {\r\n        ctx.drawImage(sprites, this.sX, this.sY, this.w, this.h, this.x, this.y, this.w, this.h);\r\n        ctx.drawImage(sprites, this.sX, this.sY, this.w, this.h, this.x + this.w, this.y, this.w, this.h);\r\n      },\r\n      update() {\r\n        if (game === 'play') {\r\n          this.x = (this.x - this.dx) % (this.w / 2);\r\n        }\r\n      }\r\n    };\r\n\r\n    const bird = {\r\n      animation: [\r\n        { sX: 276, sY: 112 },\r\n        { sX: 276, sY: 139 },\r\n        { sX: 276, sY: 164 },\r\n        { sX: 276, sY: 139 }\r\n      ],\r\n      x: 50, y: 150, w: 34, h: 26, radius: 12,\r\n      frame: 0, gravity: 0.25, jump: 4.6, speed: 0, rotation: 0,\r\n      draw() {\r\n        const bird = this.animation[this.frame];\r\n        ctx.save();\r\n        ctx.translate(this.x, this.y);\r\n        ctx.rotate(this.rotation);\r\n        ctx.drawImage(sprites, bird.sX, bird.sY, this.w, this.h, -this.w / 2, -this.h / 2, this.w, this.h);\r\n        ctx.restore();\r\n      },\r\n      flap() {\r\n        this.speed = -this.jump;\r\n        FLAP.play();\r\n      },\r\n      update() {\r\n        this.period = game === 'start' ? 10 : 5;\r\n        this.frame += frame % this.period === 0 ? 1 : 0;\r\n        this.frame %= this.animation.length;\r\n\r\n        if (game === 'start') {\r\n          this.y = 150;\r\n          this.rotation = 0;\r\n        } else {\r\n          this.speed += this.gravity;\r\n          this.y += this.speed;\r\n\r\n          if (this.y + this.h / 2 >= canvas.height - 112) {\r\n            this.y = canvas.height - 112 - this.h / 2;\r\n            if (game === 'play') {\r\n              game = 'end';\r\n              DIE.play();\r\n            }\r\n          }\r\n\r\n          this.rotation = this.speed >= this.jump ? 90 * DEGREE : -25 * DEGREE;\r\n        }\r\n      },\r\n      reset() {\r\n        this.speed = 0;\r\n        this.y = 150;\r\n      }\r\n    };\r\n\r\n    const pipes = {\r\n      position: [],\r\n      top: { sX: 553, sY: 0 },\r\n      bottom: { sX: 502, sY: 0 },\r\n      w: 53, h: 400, gap: 85, maxYPos: -150, dx: 2,\r\n      draw() {\r\n        this.position.forEach(pipe => {\r\n          let topY = pipe.y;\r\n          let bottomY = pipe.y + this.h + this.gap;\r\n\r\n          ctx.drawImage(sprites, this.top.sX, this.top.sY, this.w, this.h, pipe.x, topY, this.w, this.h);\r\n          ctx.drawImage(sprites, this.bottom.sX, this.bottom.sY, this.w, this.h, pipe.x, bottomY, this.w, this.h);\r\n        });\r\n      },\r\n      update() {\r\n        if (game !== 'play') return;\r\n\r\n        if (frame % 100 === 0) {\r\n          this.position.push({\r\n            x: canvas.width,\r\n            y: this.maxYPos * (Math.random() + 1)\r\n          });\r\n        }\r\n\r\n        this.position.forEach((pipe, index) => {\r\n          let bottomY = pipe.y + this.h + this.gap;\r\n\r\n          // collision\r\n          if (\r\n            bird.x + bird.radius > pipe.x && bird.x - bird.radius < pipe.x + this.w &&\r\n            (bird.y - bird.radius < pipe.y + this.h || bird.y + bird.radius > bottomY)\r\n          ) {\r\n            HIT.play();\r\n            game = 'end';\r\n          }\r\n\r\n          pipe.x -= this.dx;\r\n\r\n          if (pipe.x + this.w <= 0) {\r\n            this.position.shift();\r\n            score.value += 1;\r\n            SCORE_S.play();\r\n            score.best = Math.max(score.best, score.value);\r\n            localStorage.setItem('best', score.best);\r\n          }\r\n        });\r\n      },\r\n      reset() {\r\n        this.position = [];\r\n      }\r\n    };\r\n\r\n    const score = {\r\n      best: parseInt(localStorage.getItem('best')) || 0,\r\n      value: 0,\r\n      draw() {\r\n        ctx.fillStyle = '#FFF';\r\n        ctx.strokeStyle = '#000';\r\n        ctx.lineWidth = 2;\r\n        ctx.font = '35px Teko';\r\n\r\n        if (game === 'play') {\r\n          ctx.fillText(score.value, canvas.width / 2, 50);\r\n          ctx.strokeText(score.value, canvas.width / 2, 50);\r\n        } else if (game === 'end') {\r\n          ctx.fillText(`Score: ${this.value}`, canvas.width / 2 - 80, 400);\r\n          ctx.strokeText(`Score: ${this.value}`, canvas.width / 2 - 80, 400);\r\n\r\n          ctx.fillText(`Best: ${this.best}`, canvas.width / 2 - 80, 440);\r\n          ctx.strokeText(`Best: ${this.best}`, canvas.width / 2 - 80, 440);\r\n        }\r\n      },\r\n      reset() {\r\n        this.value = 0;\r\n      }\r\n    };\r\n\r\n    const draw = () => {\r\n      ctx.fillStyle = '#70c5ce';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      bg.draw();\r\n      pipes.draw();\r\n      ground.draw();\r\n      bird.draw();\r\n      score.draw();\r\n    };\r\n\r\n    const update = () => {\r\n      bird.update();\r\n      ground.update();\r\n      pipes.update();\r\n    };\r\n\r\n    const loop = () => {\r\n      update();\r\n      draw();\r\n      frame++;\r\n      requestAnimationFrame(loop);\r\n    };\r\n\r\n    const handleClick = () => {\r\n      switch (game) {\r\n        case 'start':\r\n          game = 'play';\r\n          break;\r\n        case 'play':\r\n          bird.flap();\r\n          break;\r\n        case 'end':\r\n          pipes.reset();\r\n          bird.reset();\r\n          score.reset();\r\n          game = 'start';\r\n          break;\r\n      }\r\n    };\r\n\r\n    canvas.addEventListener('click', handleClick);\r\n    sprites.onload = loop;\r\n\r\n    return () => {\r\n      canvas.removeEventListener('click', handleClick);\r\n    };\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} className=\"canvas\" />;\r\n};\r\n\r\nexport default GameCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}