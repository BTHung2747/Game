{"ast":null,"code":"var _jsxFileName = \"D:\\\\game\\\\Fontend\\\\src\\\\components\\\\game\\\\GameCanvas.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef } from 'react';\nimport spriteSrc from '@/assets/images/sprite.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GameCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    canvas.width = 530;\n    canvas.height = 710;\n    const sprites = new Image();\n    sprites.src = spriteSrc;\n    let game = 'start';\n    let frame = 0;\n    let arrGround = [];\n    let arrPipes = [];\n    const start = {\n      draw: () => {\n        ctx.beginPath();\n        ctx.drawImage(sprites, 1012, 0, 228, 61, canvas.width / 2 - 114, 50, 228, 61);\n        ctx.drawImage(sprites, 1012, 62, 236, 64, canvas.width / 2 - 118, 200, 236, 64);\n        ctx.drawImage(sprites, 855, 157, 140, 126, canvas.width / 2 - 70, 350, 140, 126);\n      }\n    };\n    const end = {\n      draw: () => {\n        ctx.beginPath();\n        ctx.drawImage(sprites, 1012, 126, 246, 54, canvas.width / 2 - 123, 200, 246, 54);\n        ctx.drawImage(sprites, 624, 432, 290, 145, canvas.width / 2 - 145, 350, 290, 145);\n        ctx.drawImage(sprites, 624, 578, 83, 46, canvas.width / 2 - 41.5, 500, 83, 46);\n      }\n    };\n    const bg = {\n      sX: 163,\n      sY: 0,\n      sW: 225,\n      sH: 625,\n      cX: 0,\n      cY: 0,\n      cW: 229,\n      cH: 625,\n      draw: function () {\n        ctx.beginPath();\n        for (let i = 0; i < 3; i++) {\n          ctx.drawImage(sprites, this.sX, this.sY, this.sW, this.sH, this.cX + i * this.cW, this.cY, this.cW, this.cH);\n        }\n      }\n    };\n    class Ground {\n      constructor(cX, cY) {\n        this.cX = cX;\n        this.cY = cY;\n        this.sX = 624;\n        this.sY = 0;\n        this.sW = 215;\n        this.sH = 143;\n        this.cW = 215;\n        this.cH = 143;\n        this.dx = -2;\n      }\n      draw() {\n        ctx.beginPath();\n        ctx.drawImage(sprites, this.sX, this.sY, this.sW, this.sH, this.cX, this.cY, this.cW, this.cH);\n      }\n    }\n    for (let i = 0; i < 4; i++) {\n      arrGround.push(new Ground(215 * i, 625));\n    }\n    const drawArrGround = () => arrGround.forEach(g => g.draw());\n    const updateArrGround = () => {\n      arrGround.forEach(g => g.cX += g.dx);\n      if (arrGround[0].cX <= -336) {\n        arrGround.shift();\n        arrGround.push(new Ground(arrGround[2].cX + 215, 625));\n      }\n    };\n    const random = (min, max) => Math.ceil(Math.random() * (max - min) + min);\n    class Pipes {\n      constructor(cX, cY, space) {\n        this.cX = cX;\n        this.cY = cY;\n        this.space = space;\n        this.cW = 82;\n        this.cH = 710;\n        this.sXt = 0;\n        this.sYt = 0;\n        this.sXb = 1261;\n        this.sYb = 0;\n        this.sW = 82;\n        this.sH = 710;\n        this.dx = -2;\n      }\n      draw() {\n        ctx.beginPath();\n        ctx.drawImage(sprites, this.sXt, this.sYt, this.sW, this.sH, this.cX, this.cY, this.cW, this.cH);\n        ctx.drawImage(sprites, this.sXb, this.sYb, this.sW, this.sH, this.cX, this.cY + this.cH + this.space, this.cW, this.cH);\n      }\n    }\n    const newPipes = () => {\n      for (let i = 0; i < 4; i++) {\n        arrPipes.push(new Pipes(random(530, 600) * i, random(-660, -300), 200));\n      }\n    };\n    const drawArrPipe = () => arrPipes.forEach(p => p.draw());\n    const updateArrPipe = () => {\n      arrPipes.forEach(p => p.cX += p.dx);\n      if (arrPipes[0].cX <= -82) {\n        arrPipes.shift();\n        arrPipes.push(new Pipes(arrPipes[arrPipes.length - 1].cX + random(400, 500), random(-660, -300), random(150, 200)));\n      }\n    };\n    class Bird {\n      constructor(cX, cY) {\n        this.cX = cX;\n        this.cY = cY;\n        this.animate = [840, 900, 960];\n        this.sW = 51;\n        this.sH = 36;\n        this.cW = 51;\n        this.cH = 36;\n        this.i = 0;\n        this.v = 0;\n        this.a = 0.5;\n      }\n      draw() {\n        ctx.beginPath();\n        if (game === 'start' && frame % 35 === 0 || game === 'play' && frame % 16 === 0) {\n          this.i = (this.i + 1) % 3;\n        }\n        ctx.drawImage(sprites, this.animate[this.i], 0, this.sW, this.sH, this.cX, this.cY, this.cW, this.cH);\n      }\n      update() {\n        if (['play', 'end'].includes(game)) {\n          this.v += this.a;\n          this.cY += this.v;\n          if (this.cY + this.cH + this.v >= 625) {\n            game = 'end';\n            this.v = 0;\n            this.cY = 625;\n          }\n        }\n      }\n    }\n    const bird = new Bird(150, canvas.height / 2 - 12);\n    canvas.addEventListener('click', () => {\n      if (game === 'start') game = 'play';else if (game === 'play') bird.v = -8;\n    });\n    const draw = () => {\n      bg.draw();\n      if (game === 'start') start.draw();\n      drawArrPipe();\n      drawArrGround();\n      bird.draw();\n      if (game === 'end') end.draw();\n    };\n    const update = () => {\n      if (game === 'play') {\n        updateArrPipe();\n        updateArrGround();\n      }\n      bird.update();\n    };\n    const animate = () => {\n      requestAnimationFrame(animate);\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      frame++;\n      draw();\n      update();\n    };\n    sprites.onload = () => animate();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    className: \"canvas block mx-auto bg-sky-100\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 10\n  }, this);\n};\n_s(GameCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["useEffect","useRef","spriteSrc","jsxDEV","_jsxDEV","GameCanvas","_s","canvasRef","canvas","current","ctx","getContext","width","height","sprites","Image","src","game","frame","arrGround","arrPipes","start","draw","beginPath","drawImage","end","bg","sX","sY","sW","sH","cX","cY","cW","cH","i","Ground","constructor","dx","push","drawArrGround","forEach","g","updateArrGround","shift","random","min","max","Math","ceil","Pipes","space","sXt","sYt","sXb","sYb","newPipes","drawArrPipe","p","updateArrPipe","length","Bird","animate","v","a","update","includes","bird","addEventListener","requestAnimationFrame","clearRect","onload","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/game/Fontend/src/components/game/GameCanvas.jsx"],"sourcesContent":["import { useEffect, useRef } from 'react';\r\nimport spriteSrc from '@/assets/images/sprite.png';\r\n\r\nconst GameCanvas = () => {\r\n  const canvasRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    canvas.width = 530;\r\n    canvas.height = 710;\r\n\r\n    const sprites = new Image();\r\n    sprites.src = spriteSrc;\r\n\r\n    let game = 'start';\r\n    let frame = 0;\r\n    let arrGround = [];\r\n    let arrPipes = [];\r\n\r\n    const start = {\r\n      draw: () => {\r\n        ctx.beginPath();\r\n        ctx.drawImage(sprites, 1012, 0, 228, 61, canvas.width / 2 - 114, 50, 228, 61);\r\n        ctx.drawImage(sprites, 1012, 62, 236, 64, canvas.width / 2 - 118, 200, 236, 64);\r\n        ctx.drawImage(sprites, 855, 157, 140, 126, canvas.width / 2 - 70, 350, 140, 126);\r\n      },\r\n    };\r\n\r\n    const end = {\r\n      draw: () => {\r\n        ctx.beginPath();\r\n        ctx.drawImage(sprites, 1012, 126, 246, 54, canvas.width / 2 - 123, 200, 246, 54);\r\n        ctx.drawImage(sprites, 624, 432, 290, 145, canvas.width / 2 - 145, 350, 290, 145);\r\n        ctx.drawImage(sprites, 624, 578, 83, 46, canvas.width / 2 - 41.5, 500, 83, 46);\r\n      },\r\n    };\r\n\r\n    const bg = {\r\n      sX: 163, sY: 0, sW: 225, sH: 625,\r\n      cX: 0, cY: 0, cW: 229, cH: 625,\r\n      draw: function () {\r\n        ctx.beginPath();\r\n        for (let i = 0; i < 3; i++) {\r\n          ctx.drawImage(sprites, this.sX, this.sY, this.sW, this.sH, this.cX + i * this.cW, this.cY, this.cW, this.cH);\r\n        }\r\n      },\r\n    };\r\n\r\n    class Ground {\r\n      constructor(cX, cY) {\r\n        this.cX = cX;\r\n        this.cY = cY;\r\n        this.sX = 624;\r\n        this.sY = 0;\r\n        this.sW = 215;\r\n        this.sH = 143;\r\n        this.cW = 215;\r\n        this.cH = 143;\r\n        this.dx = -2;\r\n      }\r\n      draw() {\r\n        ctx.beginPath();\r\n        ctx.drawImage(sprites, this.sX, this.sY, this.sW, this.sH, this.cX, this.cY, this.cW, this.cH);\r\n      }\r\n    }\r\n\r\n    for (let i = 0; i < 4; i++) {\r\n      arrGround.push(new Ground(215 * i, 625));\r\n    }\r\n\r\n    const drawArrGround = () => arrGround.forEach(g => g.draw());\r\n\r\n    const updateArrGround = () => {\r\n      arrGround.forEach(g => g.cX += g.dx);\r\n      if (arrGround[0].cX <= -336) {\r\n        arrGround.shift();\r\n        arrGround.push(new Ground(arrGround[2].cX + 215, 625));\r\n      }\r\n    };\r\n\r\n    const random = (min, max) => Math.ceil(Math.random() * (max - min) + min);\r\n\r\n    class Pipes {\r\n      constructor(cX, cY, space) {\r\n        this.cX = cX;\r\n        this.cY = cY;\r\n        this.space = space;\r\n        this.cW = 82;\r\n        this.cH = 710;\r\n        this.sXt = 0;\r\n        this.sYt = 0;\r\n        this.sXb = 1261;\r\n        this.sYb = 0;\r\n        this.sW = 82;\r\n        this.sH = 710;\r\n        this.dx = -2;\r\n      }\r\n      draw() {\r\n        ctx.beginPath();\r\n        ctx.drawImage(sprites, this.sXt, this.sYt, this.sW, this.sH, this.cX, this.cY, this.cW, this.cH);\r\n        ctx.drawImage(sprites, this.sXb, this.sYb, this.sW, this.sH, this.cX, this.cY + this.cH + this.space, this.cW, this.cH);\r\n      }\r\n    }\r\n\r\n    const newPipes = () => {\r\n      for (let i = 0; i < 4; i++) {\r\n        arrPipes.push(new Pipes(random(530, 600) * i, random(-660, -300), 200));\r\n      }\r\n    };\r\n\r\n    const drawArrPipe = () => arrPipes.forEach(p => p.draw());\r\n\r\n    const updateArrPipe = () => {\r\n      arrPipes.forEach(p => p.cX += p.dx);\r\n      if (arrPipes[0].cX <= -82) {\r\n        arrPipes.shift();\r\n        arrPipes.push(new Pipes(arrPipes[arrPipes.length - 1].cX + random(400, 500), random(-660, -300), random(150, 200)));\r\n      }\r\n    };\r\n\r\n    class Bird {\r\n      constructor(cX, cY) {\r\n        this.cX = cX;\r\n        this.cY = cY;\r\n        this.animate = [840, 900, 960];\r\n        this.sW = 51;\r\n        this.sH = 36;\r\n        this.cW = 51;\r\n        this.cH = 36;\r\n        this.i = 0;\r\n        this.v = 0;\r\n        this.a = 0.5;\r\n      }\r\n      draw() {\r\n        ctx.beginPath();\r\n        if ((game === 'start' && frame % 35 === 0) || (game === 'play' && frame % 16 === 0)) {\r\n          this.i = (this.i + 1) % 3;\r\n        }\r\n        ctx.drawImage(sprites, this.animate[this.i], 0, this.sW, this.sH, this.cX, this.cY, this.cW, this.cH);\r\n      }\r\n      update() {\r\n        if (['play', 'end'].includes(game)) {\r\n          this.v += this.a;\r\n          this.cY += this.v;\r\n          if (this.cY + this.cH + this.v >= 625) {\r\n            game = 'end';\r\n            this.v = 0;\r\n            this.cY = 625;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const bird = new Bird(150, canvas.height / 2 - 12);\r\n\r\n    canvas.addEventListener('click', () => {\r\n      if (game === 'start') game = 'play';\r\n      else if (game === 'play') bird.v = -8;\r\n    });\r\n\r\n    const draw = () => {\r\n      bg.draw();\r\n      if (game === 'start') start.draw();\r\n      drawArrPipe();\r\n      drawArrGround();\r\n      bird.draw();\r\n      if (game === 'end') end.draw();\r\n    };\r\n\r\n    const update = () => {\r\n      if (game === 'play') {\r\n        updateArrPipe();\r\n        updateArrGround();\r\n      }\r\n      bird.update();\r\n    };\r\n\r\n    const animate = () => {\r\n      requestAnimationFrame(animate);\r\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n      frame++;\r\n      draw();\r\n      update();\r\n    };\r\n\r\n    sprites.onload = () => animate();\r\n  }, []);\r\n\r\n  return <canvas ref={canvasRef} className=\"canvas block mx-auto bg-sky-100\" />;\r\n};\r\n\r\nexport default GameCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}